apiVersion: templates.krateo.io/v1alpha1
kind: Collection
metadata:
  name: templates-row
  namespace: {{ .Release.Namespace }}
spec:
  type: row
  widgetsRefs:
  - apiVersion: templates.krateo.io/v1alpha1
    resource: collections
    name: templates-row-column-1
    namespace: {{ .Release.Namespace }}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: templates-row-column-1
  namespace: {{ .Release.Namespace }}
data:
  width: "24"
---
apiVersion: templates.krateo.io/v1alpha1
kind: Collection
metadata:
  name: templates-row-column-1
  namespace: {{ .Release.Namespace }}
spec:
  type: column
  propsRef:
    name: templates-row-column-1
    namespace: {{ .Release.Namespace }}
  widgetsRefs:
  - apiVersion: templates.krateo.io/v1alpha1
    resource: widgets
    name: list-compositiondefinitions
    namespace: {{ .Release.Namespace }}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: list-compositiondefinitions
  namespace: {{ .Release.Namespace }}
data:
  panel: "true"
---
apiVersion: templates.krateo.io/v1alpha1
kind: Widget
metadata:
  annotations:
    "krateo.io/verbose-api": "true"
  name: list-compositiondefinitions
  namespace: {{ .Release.Namespace }}
spec:
  type: card
  propsRef:
    name: list-compositiondefinitions
    namespace: {{ .Release.Namespace }}
  actions:
  - iterator: .allCompositionDefinitions.items
    template:
      apiVersion: templates.krateo.io/v1alpha1
      resource: form
      name: ${ "template-" + .metadata.name + "-form" }
      namespace: ${ .metadata.namespace }
  app:
    iterator: .allCompositionDefinitions.items
    template:
      title: ${ .metadata.name }
      content: ${ .status.apiVersion }
  api:
  - name: allCompositionDefinitions
    path: "/list?category=defs"
    verb: GET
    endpointRef:
      name: bff-endpoint
      namespace: {{ .Release.Namespace }}
    headers:
    - 'Accept: application/json'
---
apiVersion: templates.krateo.io/v1alpha1
kind: Collection
metadata:
  name: compositions-row
  namespace: {{ .Release.Namespace }}
spec:
  type: row
  widgetsRefs:
  - apiVersion: templates.krateo.io/v1alpha1
    resource: collections
    name: compositions-column
    namespace: {{ .Release.Namespace }}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: compositions-column
  namespace: {{ .Release.Namespace }}
data:
  width: "24"
---
apiVersion: templates.krateo.io/v1alpha1
kind: Collection
metadata:
  name: compositions-column
  namespace: {{ .Release.Namespace }}
spec:
  type: column
  propsRef:
    name: compositions-column
    namespace: {{ .Release.Namespace }}
  widgetsRefs:
  - apiVersion: templates.krateo.io/v1alpha1
    resource: widgets
    name: list-compositions
    namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: bff-endpoint
  namespace: {{ .Release.Namespace }}
stringData:
  server-url: http://bff.krateo-system.svc:8081
  insecure: "true"
---
apiVersion: templates.krateo.io/v1alpha1
kind: Widget
metadata:
  name: list-compositions
  namespace: {{ .Release.Namespace }}
spec:
  type: card
  actions:
  - iterator: .allCompositions.items
    template:
      apiVersion: templates.krateo.io/v1alpha1
      resource: collections
      name: ${ "composition-" + .metadata.name + "-" + .metadata.namespace + "-tablist" }
      namespace: ${ .metadata.namespace }
  app:
    iterator: .allCompositions.items
    template:
      title: ${ .metadata.name }
      content: ${ "kind:" + .kind + ",apiVersion:" + .apiVersion }
  api:
  - name: allCompositions
    path: "/list?category=compositions"
    verb: GET
    endpointRef:
      name: bff-endpoint
      namespace: {{ .Release.Namespace }}
    headers:
    - 'Accept: application/json'
